// Generated by CoffeeScript 1.8.0
(function() {
  var classification_add_extra_message, classification_restrain_set_html, classification_set_extra_message_content_html, classification_set_extra_message_html, classification_set_name_html, classification_set_priority_html, decktype_set_extra_message_html, decktype_set_extra_message_name, decktype_set_type_name, tag_set_extra_message_html, tag_set_extra_message_name, tag_set_type_name;

  this.classification_set_html = function(classification) {
    var type;
    classification_set_name_html(classification.name);
    classification_set_priority_html(classification.priority);
    classification_restrain_set_html(classification.restrain);
    classification_set_extra_message_html(classification);
    type = classification.type;
    if (type === 'deck') {
      return decktype_set_type_name();
    } else if (type === 'tag') {
      return tag_set_type_name();
    }
  };

  classification_set_name_html = function(name) {
    return $("div#deckName").html(name);
  };

  classification_set_priority_html = function(id) {
    return $("div#deckPriority").html(id);
  };

  classification_restrain_set_html = function(restrains) {
    var restrain, restrain_gotten_html, _i, _len, _results;
    $("ul#restrains").empty();
    if (!(restrains instanceof Array)) {
      restrains = [restrains];
    }
    _results = [];
    for (_i = 0, _len = restrains.length; _i < _len; _i++) {
      restrain = restrains[_i];
      restrain_gotten_html = this.restrain_html(restrain);
      $("ul#restrains").append(restrain_gotten_html[0]);
      _results.push($("ul#restrains").append(restrain_gotten_html[1]));
    }
    return _results;
  };

  classification_set_extra_message_html = function(classification) {
    var type;
    type = classification.type;
    if (type === 'deck') {
      decktype_set_extra_message_name();
      return decktype_set_extra_message_html(classification);
    } else if (type === 'tag') {
      tag_set_extra_message_name();
      return tag_set_extra_message_html(classification);
    }
  };

  classification_set_extra_message_content_html = function(messages) {
    var message, _i, _len, _results;
    $("ul#extraMessageList").empty();
    if (messages === null || messages === void 0) {
      return;
    }
    if (!(messages instanceof Array)) {
      messages = [messages];
    }
    _results = [];
    for (_i = 0, _len = messages.length; _i < _len; _i++) {
      message = messages[_i];
      _results.push(classification_add_extra_message(message));
    }
    return _results;
  };

  classification_add_extra_message = function(message) {
    var a;
    a = $("<a></a>");
    a.addClass("list-group-item");
    if (message.name !== void 0) {
      message = message.name;
    }
    a.html(message);
    return $("ul#extraMessageList").append(a);
  };

  decktype_set_type_name = function() {
    return $("div#typeName").html("卡组");
  };

  decktype_set_extra_message_name = function() {
    return $("div#extraMessageName").html("标签");
  };

  decktype_set_extra_message_html = function(decktype) {
    return classification_set_extra_message_content_html(decktype.tags);
  };

  tag_set_type_name = function() {
    return $("div#typeName").html("标签");
  };

  tag_set_extra_message_name = function() {
    return $("div#extraMessageName").html("参数");
  };

  tag_set_extra_message_html = function(tag) {
    return classification_set_extra_message_content_html(tag.configs);
  };

}).call(this);

//# sourceMappingURL=classification.js.map
